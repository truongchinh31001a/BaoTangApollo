// "use client";

// import '@ant-design/v5-patch-for-react-19';
// import { useState } from "react";
// import { Form, Input, Button, DatePicker, Select } from "antd";
// import { toast } from "react-toastify";
// import dayjs from "dayjs";

// export function RegisterForm({ switchToLogin }) {
//   const [loading, setLoading] = useState(false);

//   const onFinish = async (values) => {
//     setLoading(true);
//     const { name, email, password, dateOfBirth, gender } = values;

//     try {
//       const res = await fetch("/api/auth/register", {
//         method: "POST",
//         headers: { "Content-Type": "application/json" },
//         body: JSON.stringify({
//           name,
//           email,
//           password,
//           gender,
//           dateOfBirth: dateOfBirth.format("YYYY-MM-DD"),
//         }),
//       });

//       const data = await res.json();
//       if (!res.ok) throw new Error(data.error || "ƒêƒÉng k√Ω th·∫•t b·∫°i!");

//       toast.success("üéâ ƒêƒÉng k√Ω th√†nh c√¥ng! ƒêang chuy·ªÉn sang ƒëƒÉng nh·∫≠p...");

//       // Chuy·ªÉn v·ªÅ tab ƒëƒÉng nh·∫≠p sau 2 gi√¢y
//       setTimeout(() => {
//         switchToLogin();
//       }, 2000);
//     } catch (error) {
//       toast.error(error.message);
//     } finally {
//       setLoading(false);
//     }
//   };

//   return (
//     <div className="p-4">
//       <Form layout="vertical" onFinish={onFinish}>
//         <Form.Item
//           label="H·ªç v√† T√™n"
//           name="name"
//           rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p h·ªç v√† t√™n!" }]}
//         >
//           <Input placeholder="Nguy·ªÖn VƒÉn A" />
//         </Form.Item>

//         <Form.Item
//           label="Email"
//           name="email"
//           rules={[
//             { required: true, message: "Vui l√≤ng nh·∫≠p email!" },
//             { type: "email", message: "Email kh√¥ng h·ª£p l·ªá!" },
//           ]}
//         >
//           <Input type="email" placeholder="example@gmail.com" />
//         </Form.Item>

//         <Form.Item
//           label="Ng√†y sinh"
//           name="dateOfBirth"
//           rules={[{ required: true, message: "Vui l√≤ng ch·ªçn ng√†y sinh!" }]}
//         >
//           <DatePicker
//             format="DD/MM/YYYY"
//             className="w-full"
//             disabledDate={(current) => current && current > dayjs().endOf("day")}
//           />
//         </Form.Item>

//         <Form.Item
//           label="Gi·ªõi t√≠nh"
//           name="gender"
//           rules={[{ required: true, message: "Vui l√≤ng ch·ªçn gi·ªõi t√≠nh!" }]}
//         >
//           <Select placeholder="Ch·ªçn gi·ªõi t√≠nh">
//             <Select.Option value="male">Nam</Select.Option>
//             <Select.Option value="female">N·ªØ</Select.Option>
//             <Select.Option value="other">Kh√°c</Select.Option>
//           </Select>
//         </Form.Item>

//         <Form.Item
//           label="M·∫≠t kh·∫©u"
//           name="password"
//           rules={[{ required: true, message: "Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u!" }, { min: 6, message: "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!" }]}
//         >
//           <Input.Password placeholder="********" />
//         </Form.Item>

//         <Form.Item
//           label="X√°c nh·∫≠n m·∫≠t kh·∫©u"
//           name="confirmPassword"
//           dependencies={["password"]}
//           hasFeedback
//           rules={[
//             { required: true, message: "Vui l√≤ng nh·∫≠p l·∫°i m·∫≠t kh·∫©u!" },
//             ({ getFieldValue }) => ({
//               validator(_, value) {
//                 if (!value || getFieldValue("password") === value) {
//                   return Promise.resolve();
//                 }
//                 return Promise.reject(new Error("M·∫≠t kh·∫©u kh√¥ng kh·ªõp!"));
//               },
//             }),
//           ]}
//         >
//           <Input.Password placeholder="********" />
//         </Form.Item>

//         <Button type="primary" htmlType="submit" loading={loading} block>
//           ƒêƒÉng k√Ω
//         </Button>
//       </Form>
//     </div>
//   );
// }
